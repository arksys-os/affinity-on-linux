# Maintainer: Your Name <your.email@example.com>
pkgname=affinity-photo
pkgver=2.5.5
pkgrel=1
pkgdesc="Raster graphics editor developed by Serif"
arch=('x86_64')
url="https://store.serif.com/en-us/update/windows/photo/2/"
license=('custom:Serif')
depends=('alsa-lib' 'alsa-plugins' 'cups' 'desktop-file-utils' 'dosbox' 'ffmpeg' 
         'fontconfig' 'freetype2' 'gcc-libs' 'gettext' 'giflib' 'gnutls' 
         'gst-plugins-base-libs' 'gtk3' 'libgphoto2' 'libpcap' 'libpulse' 'libva' 
         'libxcomposite' 'libxcursor' 'libxi' 'libxinerama' 'libxrandr' 
         'mingw-w64-gcc' 'opencl-headers' 'opencl-icd-loader' 'samba' 'sane' 
         'sdl2' 'v4l-utils' 'vulkan-icd-loader' 'wine-mono' 'git' 'winetricks')
makedepends=('gcc' 'make' 'git')

# Fetch and extract the dynamic URL from Serif's update page
download_link=$(curl -s 'https://store.serif.com/en-us/update/windows/photo/2/' \
    | sed -n 's/.*href="\([^"]*d1gl0nrskhax8d\.cloudfront\.net\/windows\/photo2\/2\.5\.5\/affinity-photo-msi-2\.5\.5\.exe?Expires[^"]*\)".*/\1/p')

source=(
    "affinity-photo-msi-2.5.5.exe::$download_link"
    "https://gitlab.winehq.org/ElementalWarrior/wine.git"
)
sha256sums=('SKIP' 'SKIP')

# Define variables
_wine_build_dir="${srcdir}/wine-build"
_wine_install_dir="/opt/wines/affinity-photo-wine"
_wine_runner="affinity-photo-wine"
_wine_prefix="$HOME/.wineAffinity"

prepare() {
    # Clone the custom Wine fork from ElementalWarrior
    cd "$srcdir"
    if [ ! -d "${srcdir}/wine" ]; then
        echo "Cloning ElementalWarrior's Wine fork..."
        git clone "$srcdir/wine" "$srcdir/wine"
    fi

    cd "$srcdir/wine"
    git switch affinity-photo3-wine9.13-part3
}

build() {
    # Create build directories and configure Wine for both 32-bit and 64-bit
    mkdir -p "$_wine_build_dir/winewow64-build"
    cd "$_wine_build_dir/winewow64-build"

    # Configure for 32-bit and 64-bit architectures
    ../configure --prefix="$_wine_install_dir" --enable-archs=i386,x86_64

    # Build Wine
    make --jobs 4
}

package() {
    # Install Wine
    cd "$_wine_build_dir/winewow64-build"
    make install

    # Install Affinity Photo MSI
    install -Dm644 "$srcdir/affinity-photo-msi-2.5.5.exe" "$pkgdir/usr/share/affinity-wine/affinity-photo-msi-2.5.5.exe"

    # Copy the WinMetadata directory
    install -d "$pkgdir/opt/wine/drive_c/windows/system32/WinMetadata"
    cp -r "$WINE_DIR/WinMetadata/" "$pkgdir/opt/wine/drive_c/windows/system32/WinMetadata"
   
    # Create a symlink for wine and wine64
    install -d "$pkgdir/usr/bin"
    ln -sf "$pkgdir/$_wine_install_dir/bin/wine" "$pkgdir/usr/bin/wine-affinity"
    ln -sf "$pkgdir/$_wine_install_dir/bin/wine64" "$pkgdir/usr/bin/wine64-affinity"

    # Install the desktop entry
    install -Dm644 "$srcdir/photo.desktop" "$pkgdir/usr/share/applications/photo.desktop"

    ### Note: Initialization and application installation are usually done by the user ###

    # Initialize the Wine prefix
    WINEPREFIX="$_wine_prefix" "$pkgdir/usr/bin/wine-affinity" wineboot --init

    # Install required dependencies for Affinity Photo using winetricks
    WINEPREFIX="$_wine_prefix" winetricks -q dotnet48 corefonts

    # Install Affinity Photo using Wine
    WINEPREFIX="$_wine_prefix" "$pkgdir/usr/bin/wine-affinity" "$pkgdir/usr/share/affinity-wine/affinity-photo-msi-2.5.5.exe"
}
